 Assignment-3

1.

> use restaurants
switched to db restaurants
> db.createCollection("addresses");
{ "ok" : 1 }
> show collections
addresses
> db.addresses.find().pretty();

------------------------------
2.

> db.addresses.find({},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();

----------------------------------

3.

> db.addresses.find({},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();


---------------------------
4.

> db.addresses.find({},{_id:0,restaurant_id:1,name:1,borough:1,"address.zipcode":1}).pretty();

------------------
5.

> db.addresses.find({borough:"Bronx"}).limit(5).pretty();


-------------------------
6.

> db.addresses.find({borough:"Bronx"}).pretty();

---------------------------------

7.


> db.addresses.find({borough:"Bronx"}).skip(5).limit(5).pretty();

---------------------------
8.

> db.addresses.find({"grades.score":{$gt:90}}).pretty();

--------------------------
9.

> db.addresses.find({"grades.score":{$gt:80,$lt:100}}).pretty();

--------------------
10.

> db.addresses.find({"address.coord.0":{$lt:-95.754168}}).pretty();

----------------------------------------------
11.

> db.addresses.find({$and:[{cuisine:{$not:/American/}},{"grades.score":{$gt:70}},{"address.coord.0":{$lt:-65.754168}}]}).pretty();

------------------------
12.

> db.addresses.find({ "cuisine" : {$ne : "American "}, "grades.score" :{$gt: 70}, "address.coord" : {$lt : -65.754168}}).pretty();



------------------------

13.
> db.addresses.find({$and:[{cuisine:{$not:/American/}},{"grades.grade":"A"},{borough:{$not:/Brooklyn/}}]}).sort({cuisine:-1}).pretty();
-------------------
14.

> db.addresses.find({name: {$regex: /^Wil.*/}},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();


-----------------------------
15.

> db.addresses.find({name: {$regex: "ces$"}},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();


---------------------------
16.

> db.addresses.find({"name": /.*Reg.*/},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();

--------------------------
17.


> db.addresses.find({$and:[{borough:"Bronx"},{$or: [{cuisine:"American"},{cuisine:"Chinese"}]}]}).pretty();

------------------
18.

> db.addresses.find({$or: [{borough:"Staten Island"},{borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"}]},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();
--------------------
19.

> db.addresses.find({$nor: [{borough:"Staten Island"},{borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"}]},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();
--------------------------
20.

> db.addresses.find({"grades.score":{$lt:10}},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();

-------------------------------
21.

> db.addresses.find({$or: [{$and: [{cuisine:{$not:/American/}},{cuisine:{$not:/Chinese/}}]},{name:{$regex: /^Wil.*/}}]},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();

----------------------------

22.

> db.addresses.find({"grades.date":ISODate("2014-08-11T00:00:00Z"),"grades.grade":"A","grades.score":11},{"restaurant_id":1,"name":1,"grades":1}).pretty();
------------------------

23.

> db.addresses.find({"grades.1.date":ISODate("2014-08-11T00:00:00Z"),"grades.1.grade":"A","grades.1.score":9},{"restaurant_id":1,"name":1,"grades":1}).pretty();
-----------------------------------------

24.

> db.addresses.find({"address.coord.1":{$gt:42,$lte:52}},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty();

-------------------------
25.

> db.addresses.find().sort({name:1}).pretty();

----------------------
26.

> db.addresses.find().sort({name:-1}).pretty();


----------------------
27.

> db.addresses.find().sort({cuisine:1,borough:-1}).pretty();

------------------------------------

28.


> db.addresses.find({"address.street":{$exists:true}}).pretty();


--------------------------
29.


> db.addresses.find({"address.coord":{$type:1}}).pretty();


-------------------------

30.

> db.addresses.find({"grades.score":{$mod:[7,0]}},{"restaurant_id":1,"name":1,"grades":1}).pretty();


-------------------------------

31.

> db.addresses.find({name:{$regex: "mon.*",$options: "i"}},{"name":1,"borough":1,"address.coord":1,"cuisine":1}).pretty();



----------------------

32.


> db.addresses.find({name:{$regex: /^Mad/i,}},{"name":1,"borough":1,"address.coord":1,"cuisine":1}).pretty();









